var documenterSearchIndex = {"docs":
[{"location":"angledaddress/","page":"-","title":"-","text":"Source: TreesBook pg 145","category":"page"},{"location":"angledaddress/","page":"-","title":"-","text":"We can imagine generating the internal address by making a sequence of guesses as to what the period of a kneading sequence is. We will look at the sequence one term at a time and make the smallest possible guess consistent with the amount of the sequence we have seen so far. The first term of the internal address is always 1, corresponding to the guess that the sequence is constant. The second term in the kneading sequence is the smallest index of a term which is different from the first. ","category":"page"},{"location":"angledaddress/#Angled-Internal-Addresses","page":"-","title":"Angled Internal Addresses","text":"","category":"section"},{"location":"angledaddress/","page":"-","title":"-","text":"Internal addresses specify kneading sequences, but kneading sequences do not uniquely specify hyperbolic components. To distinguish between hyperbolic components we can use angled internal addresses.","category":"page"},{"location":"angledaddress/#Denominators-of-Angled-Internal-Addresses","page":"-","title":"Denominators of Angled Internal Addresses","text":"","category":"section"},{"location":"angledaddress/","page":"-","title":"-","text":"These are determined uniquely by the un-angled internal address","category":"page"},{"location":"angledaddress/#Numerators-of-Angled-Internal-Addresses","page":"-","title":"Numerators of Angled Internal Addresses","text":"","category":"section"},{"location":"angledaddress/","page":"-","title":"-","text":"These can be chosen freely among the positive integers coprime to the denominator","category":"page"},{"location":"kneadingsequence/#Kneading-sequences","page":"Kneading sequences","title":"Kneading sequences","text":"","category":"section"},{"location":"kneadingsequence/","page":"Kneading sequences","title":"Kneading sequences","text":"A kneading sequence is an infinite sequence of symbols from the set AB*. This sequence encodes the itinerary of an angle theta under the doubling map, where A denotes the interval (fractheta2fractheta+12), B the interval  (fractheta+12fractheta2), and * is a kind of wildcard, assigned to the angles which fall exactly in the set fractheta+12fractheta2","category":"page"},{"location":"embeddedhubbardtree2angle/","page":"Finding the angle of an oriented Hubbard Tree","title":"Finding the angle of an oriented Hubbard Tree","text":"Source: TreesBook page 175 The schematic diagram of algorithms (figure 1.2) suggests that this should be achieved by first embedding the Hubbard tree corresponding to this internal address using corollary 4.11, then calculating the external angle from this embedded Hubbard tree using algorithm 13.6","category":"page"},{"location":"embeddedhubbardtree2angle/","page":"Finding the angle of an oriented Hubbard Tree","title":"Finding the angle of an oriented Hubbard Tree","text":"The implementation of algorithm 13.6 requires that the Hubbard tree's endpoints have a cyclic order. How can we obtain a cyclic order on the endpoints from an angled internal address? If we can put a cyclic order on all the branch points this will impose a cyclic order on the endpoints.","category":"page"},{"location":"embeddedhubbardtree2angle/","page":"Finding the angle of an oriented Hubbard Tree","title":"Finding the angle of an oriented Hubbard Tree","text":"Corollary 4.11 (page 40) counts the number of ways to assign cyclic order to the branch points.","category":"page"},{"location":"embeddedhubbardtree2angle/","page":"Finding the angle of an oriented Hubbard Tree","title":"Finding the angle of an oriented Hubbard Tree","text":"Lemmma 11.14 (page 146) tells us how to find the numerators of the angled internal address of an an external angle.","category":"page"},{"location":"embeddedhubbardtree2angle/","page":"Finding the angle of an oriented Hubbard Tree","title":"Finding the angle of an oriented Hubbard Tree","text":"We want to describe the bijection between choices of numerator and choices of cyclic order. Here's a guess: A denominator of q corresponds to a characteristic branch point (equivalently a periodic branch orbit) with q arms. When the Hubbard tree is admissible the first return map of the characteristic point permutes the local arms transitively (page 37). The numerator p tells us how many arms the local arm towards 0 moves to be mapped to the local arm to c. Equivalently, it tells us how many arms apart the local arms to 0 and c are. ","category":"page"},{"location":"embeddedhubbardtree2angle/","page":"Finding the angle of an oriented Hubbard Tree","title":"Finding the angle of an oriented Hubbard Tree","text":"The definition of characteristic point (page 34) tells us that characteristic points separate 0 from c_1. In light of this we consider the arc (0c_1) and all the branch points on this arc. ","category":"page"},{"location":"embeddedhubbardtree2angle/","page":"Finding the angle of an oriented Hubbard Tree","title":"Finding the angle of an oriented Hubbard Tree","text":"Calculating the external angles of the points of a Hubbard Tree should look like the process of orienting them. Namely, we should do it using preimages, and we can calculate all the angles one orbit at a time using the critical orbit and the branch orbits. Use the characteristic sets.","category":"page"},{"location":"embeddedhubbardtree2angle/","page":"Finding the angle of an oriented Hubbard Tree","title":"Finding the angle of an oriented Hubbard Tree","text":"719","category":"page"},{"location":"embeddedhubbardtree2angle/","page":"Finding the angle of an oriented Hubbard Tree","title":"Finding the angle of an oriented Hubbard Tree","text":"shows us an example where there is only a single characteristic point but many branch points, including on the path between zero and one.","category":"page"},{"location":"embeddedhubbardtree2angle/","page":"Finding the angle of an oriented Hubbard Tree","title":"Finding the angle of an oriented Hubbard Tree","text":"How do we append the fixed point beta and its preimage -beta to a Hubbard tree? This process is described in algorithm 13.6 (page 175)","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"We will be sampling the Mandelbrot set in a rectangular grid and rendering each point as a square pixel. Doing this requires making some decisions.","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"how many pixels? N::Int -> 1000x1000\nlocation, scale, and orientation? (center::Complex, middle_left::Complex)  \nmax number of iterations? maxiter::Int -> unknown function of unknown variables. \"distance from the set\" with \"the right\" metric\nstop condition? stop()::Function{Complex -> boolean}\ncolor? color()::Function{IteratorState -> RGB}","category":"page"},{"location":"images/#Some-recipes-for-generating-pictures","page":"Images","title":"Some recipes for generating pictures","text":"","category":"section"},{"location":"images/","page":"Images","title":"Images","text":"External rays (vector)","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"Parameter\nAngle\nRadius of 'infinity'\nSegment resolution\nDepth\nColors","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"External Binary decomposition (raster)","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"Parameter\nGrid size\nGrid location\nRadius of 'infinity'\nAngle of decomposition\nMax iter ~ depth\nColors","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"Escape Time (raster)","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"Parameter\nGrid size \nGrid location\nMax iter ~ depth\nEscape radius ~ radius of 'infinity'\nColors ","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"Inverse Iterate (vector)","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"Parameter\nStart point\nNumber of generations","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"-question: should all generations be plotted? or just the last? does it matter?","category":"page"},{"location":"images/#Combos","page":"Images","title":"Combos","text":"","category":"section"},{"location":"images/","page":"Images","title":"Images","text":"From angle: Boundary of the Julia set with inverse iterates","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"Hubbard tree inside","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"External rays outside","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"From angle: Binary decomp outside","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"","category":"page"},{"location":"images/","page":"Images","title":"Images","text":"Binary decomp inside","category":"page"},{"location":"sequences/","page":"-","title":"-","text":"Some examples of sequences are:","category":"page"},{"location":"sequences/","page":"-","title":"-","text":"the forward orbit of an angle\nthe binary decomposition of an angle\nthe kneading sequence of an angle\nthe forward orbit of an external dynamic ray","category":"page"},{"location":"sequences/","page":"-","title":"-","text":"An infinite sequence which is eventually periodic can be represented by a finite string and a description of how it repeats. A familiar implementation of this is the use of the overline for repeating decimal expansions.","category":"page"},{"location":"sequences/","page":"-","title":"-","text":"The implementation used here is  struct Sequence     items::Vector     preperiod::Int end","category":"page"},{"location":"sequences/","page":"-","title":"-","text":"a common pattern is  2,3,4,...,preperiod+1 this can be constructed by the function \"goesto\"","category":"page"},{"location":"smallesttree/#Is-non-admissible","page":"Examples of Hubbard trees","title":"Is non-admissible","text":"","category":"section"},{"location":"smallesttree/","page":"Examples of Hubbard trees","title":"Examples of Hubbard trees","text":"1 rightarrow 2 rightarrow 4 rightarrow 5 rightarrow 6","category":"page"},{"location":"smallesttree/#contains-a-non-fixed-periodic-branch-point","page":"Examples of Hubbard trees","title":"contains a non-fixed periodic branch point","text":"","category":"section"},{"location":"smallesttree/","page":"Examples of Hubbard trees","title":"Examples of Hubbard trees","text":"theta = frac1231","category":"page"},{"location":"smallesttree/","page":"Examples of Hubbard trees","title":"Examples of Hubbard trees","text":"1 rightarrow 2 rightarrow 5","category":"page"},{"location":"smallesttree/#contains-a-branch-point-between-the-critical-point-and-the-critical-value-which-is-periodic-and-non-characteristic","page":"Examples of Hubbard trees","title":"contains a branch point between the critical point and the critical value which is periodic and non-characteristic","text":"","category":"section"},{"location":"smallesttree/","page":"Examples of Hubbard trees","title":"Examples of Hubbard trees","text":"1 rightarrow 2 rightarrow 6 rightarrow 11","category":"page"},{"location":"smallesttree/#contains-two-characteristic-cycles","page":"Examples of Hubbard trees","title":"contains two characteristic cycles","text":"","category":"section"},{"location":"smallesttree/","page":"Examples of Hubbard trees","title":"Examples of Hubbard trees","text":"1 rightarrow 3 rightarrow 7","category":"page"},{"location":"smallesttree/","page":"Examples of Hubbard trees","title":"Examples of Hubbard trees","text":"theta = frac19127","category":"page"},{"location":"smallesttree/#has-beta-and-minus-beta-attached-to-a-non-leaf","page":"Examples of Hubbard trees","title":"has beta and minus beta attached to a non-leaf","text":"","category":"section"},{"location":"smallesttree/","page":"Examples of Hubbard trees","title":"Examples of Hubbard trees","text":"theta = frac531","category":"page"},{"location":"smallesttree/#Has-preperiodic-branch-points","page":"Examples of Hubbard trees","title":"Has preperiodic branch points","text":"","category":"section"},{"location":"smallesttree/","page":"Examples of Hubbard trees","title":"Examples of Hubbard trees","text":"theta = frac29","category":"page"},{"location":"smallesttree/#Has-branch-points-which-map-to-a-non-characteristic-periodic-point-before-a-characteristic-point","page":"Examples of Hubbard trees","title":"Has branch points which map to a non-characteristic periodic point before a characteristic point","text":"","category":"section"},{"location":"smallesttree/","page":"Examples of Hubbard trees","title":"Examples of Hubbard trees","text":"theta = frac719","category":"page"},{"location":"juliasets/","page":"Julia sets","title":"Julia sets","text":"Generating pictures of Julia sets is much-beloved computational task. Gorgeous figures emerge from so few lines of code, and the fractal nature of the sets makes no number of pixels adequate. Instead, their insufficiency only begs for more computational power, a deeper and deeper zoom. ","category":"page"},{"location":"juliasets/","page":"Julia sets","title":"Julia sets","text":"Much has been said and written about Julia sets, and here are some of my favorite introductions.","category":"page"},{"location":"juliasets/","page":"Julia sets","title":"Julia sets","text":"Holly Krieger - Numberphile","category":"page"},{"location":"equipotentials/","page":"Equipotential lines","title":"Equipotential lines","text":"Just as external rays use the Riemann map Psi_c to assign an angular coordinate to points outside a Julia set, equipotential lines assign a radial coordinate.","category":"page"},{"location":"equipotentials/","page":"Equipotential lines","title":"Equipotential lines","text":"Define the potential as u_c(z) = lnPsi_c(z)","category":"page"},{"location":"hubbardtrees/","page":"Hubbard trees","title":"Hubbard trees","text":"The Hubbard tree is a description of the dynamics of a quadratic polynomial","category":"page"},{"location":"hubbardtrees/","page":"Hubbard trees","title":"Hubbard trees","text":"Topological, embedded perspective: Take a Julia set with finite critical orbit. The Hubbard tree is the minimal tree containing all the critical points, and the dynamics of the tree are given by restricting the function on the plane to the tree.","category":"page"},{"location":"hubbardtrees/","page":"Hubbard trees","title":"Hubbard trees","text":"Combinatorial perspective: Given a kneading sequence, the Hubbard tree can be defined using the triod map","category":"page"},{"location":"hubbardtrees/","page":"Hubbard trees","title":"Hubbard trees","text":"Implementation: The tree is stored as an adjacency matrix, with the first n entries holding the critical point and its forward images. The remaining entries refer to the branch points. ","category":"page"},{"location":"hubbardtrees/","page":"Hubbard trees","title":"Hubbard trees","text":"Question: can there be disjoint cycles of branch points? Answer: Yes. This happens when the denominator sequence has multiple entries greater than 2","category":"page"},{"location":"dynamicrays/","page":"Dynamic rays","title":"Dynamic rays","text":"Dynamic rays assign an external angle to every point of the exterior of a Julia set by conjugating the dynamics of p_c to the squaring map z rightarrow z^2. For connected Julia sets this conjugacy is provided by the Riemann Mapping Theorem, and we will restrict our attention to the case of connected Julia sets for this article.","category":"page"},{"location":"dynamicrays/","page":"Dynamic rays","title":"Dynamic rays","text":"We want to \"walk in\" rays from infinity, by running the dynamics backwards. The seed for this \"ray growing\" algorithm is a collection of ray segments with the structure of an orbit. ","category":"page"},{"location":"dynamicrays/","page":"Dynamic rays","title":"Dynamic rays","text":"Take any periodic angle (these are the angles with an odd denominator!), theta. Let Orb(theta) denote the orbit of theta","category":"page"},{"location":"dynamicrays/","page":"Dynamic rays","title":"Dynamic rays","text":"And where am I supposed to upload pictures?","category":"page"},{"location":"dynamicrays/","page":"Dynamic rays","title":"Dynamic rays","text":"Other prerequisites:","category":"page"},{"location":"dynamicrays/","page":"Dynamic rays","title":"Dynamic rays","text":"Julia Set","category":"page"},{"location":"introduction/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"The Mandelbrot set is the set of all complex numbers c such that the forward orbit of 0 under the function z -> z^2 + c is bounded.  Much of the Mandelbrot set's fame comes from the ease with which one can render an interesting image using a few lines of code.","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"FedericoStra on Julia Discorse provided this nice script which he admitted is 'a bit golfed' ","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"https://discourse.julialang.org/t/seven-lines-of-julia-examples-sought/50416/10","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"using GLMakie\nfunction mandelbrot(z) w = z\n    for n in 1:74\n        abs2(w) < 4 ? w = w^2 + z : return n\n    end; 75\nend\nx, y = range(-0.65, -0.45; length=1600), range(0.51, 0.71; length=1600)\nheatmap(x, y, -log.(mandelbrot.(x' .+ y .* im)))","category":"page"},{"location":"#Mandelbrot.jl","page":"Home","title":"Mandelbrot.jl","text":"","category":"section"},{"location":"#Package-Features","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Calculate things about the Mandelbrot set","category":"page"},{"location":"#Function-Documentation","page":"Home","title":"Function Documentation","text":"","category":"section"},{"location":"#Mandelbrot.KneadingSequence","page":"Home","title":"Mandelbrot.KneadingSequence","text":"A kneading sequence is a combinatorial description of the orbit of an angle under doubling. For an angle theta, the kneading sequence of theta is defined as the theta itinerary of theta.\n\n\n\n\n\n","category":"type"},{"location":"#Mandelbrot.BinaryExpansion","page":"Home","title":"Mandelbrot.BinaryExpansion","text":"The binary expansion of an angle is a sequence of 1s and 0s which can be interpreted either as place-value representation of the angle, or as an itinerary of the angle under angle doubling.\n\n\n\n\n\n","category":"type"},{"location":"#Mandelbrot.OrientedHubbardTree","page":"Home","title":"Mandelbrot.OrientedHubbardTree","text":"A combinatorial Hubbard tree with cyclic order at each vertex.  It can be constructed from an AngledInternalAddress or a RationalAngle, and it can be used to construct a HyperbolicComponent\n\n\n\n\n\n","category":"type"},{"location":"#Mandelbrot.InternalAddress","page":"Home","title":"Mandelbrot.InternalAddress","text":"An internal address is an increasing sequence of integers which describes a kneading sequence\n\n\n\n\n\n","category":"type"},{"location":"#Mandelbrot.HubbardTree","page":"Home","title":"Mandelbrot.HubbardTree","text":"Creates a topological Hubbard tree from the given kneading sequence. See https://eudml.org/doc/283172 Existence of quadratic Hubbard trees Henk Bruin, Alexandra Kafll, Dierk Schleicher  for info about the algorithm implemented here\n\n\n\n\n\n","category":"type"},{"location":"#Mandelbrot.AngledInternalAddress","page":"Home","title":"Mandelbrot.AngledInternalAddress","text":"An internal address with aditional information in the form of angles which specify a cyclic ordering of kneading sequences\n\n\n\n\n\n","category":"type"}]
}
